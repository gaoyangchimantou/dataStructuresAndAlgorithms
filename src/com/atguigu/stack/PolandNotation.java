package com.atguigu.stack;

import java.util.ArrayList;
import java.util.List;
import java.util.Stack;

public class PolandNotation {

	public static void main(String[] args) {
		
		
		//????????????????????????????
		//???
		//1. 1+((2+3)??4)-5 => ???  1 2 3 + 4 ?? + 5 ?C
		//2. ???????str ???§Ó?????????????? ???  "1+((2+3)??4)-5" =?? ?????????????List
		//   ?? "1+((2+3)??4)-5" => ArrayList [1,+,(,(,2,+,3,),*,4,),-,5]
		//3. ???????????????????List => ????????????List
		//   ?? ArrayList [1,+,(,(,2,+,3,),*,4,),-,5]  =?? ArrayList [1,2,3,+,4,*,+,5,?C]
		
		String expression = "1+((2+3)*4)-5";//?????? 
		List<String> infixExpressionList = toInfixExpressionList(expression);
		System.out.println("????????????List=" + infixExpressionList); // ArrayList [1,+,(,(,2,+,3,),*,4,),-,5]
		List<String> suffixExpreesionList = parseSuffixExpreesionList(infixExpressionList);
		System.out.println("????????????List" + suffixExpreesionList); //ArrayList [1,2,3,+,4,*,+,5,?C] 
		
		System.out.printf("expression=%d", calculate(suffixExpreesionList)); // ?
		
		
		
		/*
		
		//???????›h??????
		//(30+4)??5-6  => 30 4 + 5 ?? 6 - => 164
		// 4 * 5 - 8 + 60 + 8 / 2 => 4 5 * 8 - 60 + 8 2 / + 
		//???? 
		//??????????›h?????? ??????????????????
		//String suffixExpression = "30 4 + 5 * 6 -";
		String suffixExpression = "4 5 * 8 - 60 + 8 2 / +"; // 76
		//?¡¤
		//1. ??? "3 4 + 5 ?? 6 - " => ???ArrayList??
		//2. ?? ArrayList ?????????????????? ArrayList ???? ??????
		
		List<String> list = getListString(suffixExpression);
		System.out.println("rpnList=" + list);
		int res = calculate(list);
		System.out.println("?????????=" + res);
		
		*/
	}
	
	
	
	//?? ArrayList [1,+,(,(,2,+,3,),*,4,),-,5]  =?? ArrayList [1,2,3,+,4,*,+,5,?C]
	//?????????????????????????List => ????????????List
	public static List<String> parseSuffixExpreesionList(List<String> ls) {
		//?????????
		Stack<String> s1 = new Stack<String>(); // ?????
		//????????s2 ????????????????????§µ????pop????????????????????????????
		//??????ú‘?????????????? Stack<String> ?????? List<String> s2
		//Stack<String> s2 = new Stack<String>(); // ?????§Þ??????s2
		List<String> s2 = new ArrayList<String>(); // ?????§Þ?????Lists2
		
		//????ls
		for(String item: ls) {
			//????????????????s2
			if(item.matches("\\d+")) {
				s2.add(item);
			} else if (item.equals("(")) {
				s1.push(item);
			} else if (item.equals(")")) {
				//????????????)?????????¦Å???s1?????????????????s2????????????????????????????????????
				while(!s1.peek().equals("(")) {
					s2.add(s1.pop());
				}
				s1.pop();//!!! ?? ( ???? s1??? ????§³????
			} else {
				//??item???????§³?????s1????????, ??s1????????????????????s2?§µ???????(4.1)??s1?????????????????
				//?????????????????????????????
				while(s1.size() != 0 && Operation.getValue(s1.peek()) >= Operation.getValue(item) ) {
					s2.add(s1.pop());
				}
				//???????item????
				s1.push(item);
			}
		}
		
		//??s1??????????????¦Å?????????s2
		while(s1.size() != 0) {
			s2.add(s1.pop());
		}

		return s2; //???????????List, ?????????????????????????????List
		
	}
	
	//???????? ??????????????List
	//  s="1+((2+3)??4)-5";
	public static List<String> toInfixExpressionList(String s) {
		//???????List,?????????? ?????????
		List<String> ls = new ArrayList<String>();
		int i = 0; //?????????????????? ????????????
		String str; // ???¦Ë???????
		char c; // ????????????????????c
		do {
			//???c?????????????????????ls
			if((c=s.charAt(i)) < 48 ||  (c=s.charAt(i)) > 57) {
				ls.add("" + c);
				i++; //i???????
			} else { //????????????????????¦Ë??
				str = ""; //???str ?¨®?"" '0'[48]->'9'[57]
				while(i < s.length() && (c=s.charAt(i)) >= 48 && (c=s.charAt(i)) <= 57) {
					str += c;//???
					i++;
				}
				ls.add(str);
			}
		}while(i < s.length());
		return ls;//????
	}
	
	//??????›h???????? ???¦Í??????????? ???? ArrayList??
	public static List<String> getListString(String suffixExpression) {
		//?? suffixExpression ???
		String[] split = suffixExpression.split(" ");
		List<String> list = new ArrayList<String>();
		for(String ele: split) {
			list.add(ele);
		}
		return list;
		
	}
	
	//?????›h????????????
	/*
	 * 1)??????????Ñk??3??4???????
		2)????+?????????????4??3??4????????3??¦Æ????????????3+4???????7?????7?????
		3)??5?????
		4)??????????????????????5??7???????7??5=35????35?????
		5)??6?????
		6)?????-????????????35-6???????29?????¨®???????
	 */
	
	public static int calculate(List<String> ls) {
		// ???????, ????????????
		Stack<String> stack = new Stack<String>();
		// ???? ls
		for (String item : ls) {
			// ?????????????????????
			if (item.matches("\\d+")) { // ???????¦Ë??
				// ???
				stack.push(item);
			} else {
				// pop???????????????? ?????
				int num2 = Integer.parseInt(stack.pop());
				int num1 = Integer.parseInt(stack.pop());
				int res = 0;
				if (item.equals("+")) {
					res = num1 + num2;
				} else if (item.equals("-")) {
					res = num1 - num2;
				} else if (item.equals("*")) {
					res = num1 * num2;
				} else if (item.equals("/")) {
					res = num1 / num2;
				} else {
					throw new RuntimeException("?????????");
				}
				//??res ???
				stack.push("" + res);
			}
			
		}
		//???????stack?§Ö?????????????
		return Integer.parseInt(stack.pop());
	}

}

//??§Õ????? Operation ??????????????? ??????????
class Operation {
	private static int ADD = 1;
	private static int SUB = 1;
	private static int MUL = 2;
	private static int DIV = 2;
	
	//§Õ??????????????????????????
	public static int getValue(String operation) {
		int result = 0;
		switch (operation) {
		case "+":
			result = ADD;
			break;
		case "-":
			result = SUB;
			break;
		case "*":
			result = MUL;
			break;
		case "/":
			result = DIV;
			break;
		default:
			System.out.println("????????????" + operation);
			break;
		}
		return result;
	}
	
}
